<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>积分001</title>
    <link href="/2021/01/01/%E7%A7%AF%E5%88%86001/"/>
    <url>/2021/01/01/%E7%A7%AF%E5%88%86001/</url>
    
    <content type="html"><![CDATA[<p><strong>问题:</strong> </p><script type="math/tex; mode=display">\int_{0}^{\frac{\pi}{2}} \sin ^{2}(x) \ln (\sin (x)) {\rm d} x</script><p><strong>解:</strong> 考虑它的对偶式</p><script type="math/tex; mode=display">\int_{0}^{\frac{\pi}{2}} \cos ^{2}(x) \ln (\sin (x)) {\rm d} x</script><p>容易得到 :</p><script type="math/tex; mode=display">\begin{align*}     &\int_{0}^{\frac{\pi}{2}} \sin ^{2}(x) \ln (\sin (x)) {\rm d} x\\ =&\int_{0}^{\frac{\pi}{2}}\left(1-\cos ^{2}(x)\right) \ln (\sin (x)) {\rm d} x \\     =&-\frac{\pi}{2} \ln (2)-\int_{0}^{\frac{\pi}{2}} \cos ^{2}(x) \ln (\sin (x)) {\rm d} x     \end{align*}</script><script type="math/tex; mode=display">\begin{align*}     &\int_{0}^{\frac{\pi}{2}} \cos ^{2}(x) \ln (\sin (x)) {\rm d} x-\int_{0}^{\frac{\pi}{2}} \sin ^{2}(x) \ln (\sin (x)) {\rm d} x\\     =&\int_{0}^{\frac{\pi}{2}} \cos (2 x) \ln (\sin (x)) {\rm d} x \\     =&\left[-\frac{1}{2} x-\frac{1}{4} \sin (2 x)+\frac{1}{2} \sin (2 x) \ln (\sin (2 x))\right]_{0}^{\frac{\pi}{2}}\\ =&-\frac{\pi}{4}     \end{align*}</script><p>于是</p><script type="math/tex; mode=display">\int_{0}^{\frac{\pi}{2}} \sin ^{2}(x) \ln (\sin (x)) {\rm d} x+\int_{0}^{\frac{\pi}{2}} \cos ^{2}(x) \ln (\sin (x)) {\rm d} x=-\frac{\pi}{2}\ln 2</script><script type="math/tex; mode=display">\int_{0}^{\frac{\pi}{2}} \sin ^{2}(x) \ln (\sin (x)) {\rm d} x-\int_{0}^{\frac{\pi}{2}} \cos ^{2}(x) \ln (\sin (x)) {\rm d} x=\frac{\pi}{4}</script><p>解得 :</p><script type="math/tex; mode=display">\int_{0}^{\frac{\pi}{2}} \sin ^{2}(x) \ln (\sin (x)) {\rm d} x=\frac{\pi}{8}-\frac{\pi}{4}\ln 2</script><script type="math/tex; mode=display">\int_{0}^{\frac{\pi}{2}} \cos ^{2}(x) \ln (\sin (x)) {\rm d} x=-\frac{\pi}{8}-\frac{\pi}{4}\ln 2</script>]]></content>
    
    
    <categories>
      
      <category>Math</category>
      
    </categories>
    
    
    <tags>
      
      <tag>积分</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>积分不等式01</title>
    <link href="/2021/01/01/%E7%A7%AF%E5%88%86%E4%B8%8D%E7%AD%89%E5%BC%8F01/"/>
    <url>/2021/01/01/%E7%A7%AF%E5%88%86%E4%B8%8D%E7%AD%89%E5%BC%8F01/</url>
    
    <content type="html"><![CDATA[<p>设 $f:[0,1]\to \mathbb{R}$ 是一个可微函数，具有连续导数，且 $f(1)=0$ , 证明:</p><script type="math/tex; mode=display">4\int_{0}^{1}x^2|f'(x)|^{2}\mathrm{d}x\geqslant \int_{0}^{1}|f(x)|^2\mathrm{d}x+\left(\int_{0}^{1}|f(x)|\mathrm{d}x\right)^{2}</script><p><strong>证明:</strong> 令 $\displaystyle A=\int_{0}^{1}|f(x)|\mathrm{d}x$</p><p>由 $\color{blue}{\mathrm{Cauchy-Schwarz}}$ 不等式，我们有</p><script type="math/tex; mode=display">\begin{align*} LHS&=4\left(\int_{0}^{1}x^{2}|f'(x)|^{2}\mathrm{d}x\right)\left(\int_{0}^{1}(|f(x)|+A)^{2}\mathrm{d}x\right)\\ &\geqslant 4\left(\int_{0}^{1}x|f'(x)|\cdot|f(x)|\mathrm{d}x+A\int_{0}^{1}x|f'(x)|\mathrm{d}x \right)^{2} \end{align*}</script><p>这时，注意到</p><script type="math/tex; mode=display">\int_{0}^{1}x|f'(x)|\cdot|f(x)|\mathrm{d}x\geqslant \left|\int_{0}^{1}xf'(x)\mathrm{d}x\right|=\frac{1}{2}\int_{0}^{1}|f(x)|^{2}\mathrm{d}x</script><p>和</p><script type="math/tex; mode=display">\int_{0}^{1}|f(x)|\mathrm{d}x=\int_{0}^{1}\left|\int_{x}^{1}f'(t)\mathrm{d}t \right|\mathrm{d}x\leqslant \int_{0}^{1}\left(\int_{x}^{1}|f'(t)|\mathrm{d}t\right)\mathrm{d}x= \int_{0}^{1}x|f'(x)|\mathrm{d}x</script><script type="math/tex; mode=display">LHS\geqslant\left(\int_{0}^{1}|f(x)|^{2}\mathrm{d}x+2A\int_{0}^{1}|f(x)|\mathrm{d}x\right)^{2}</script><p>于是，只要证明</p><script type="math/tex; mode=display">\begin{align*} &\left(\int_{0}^{1}|f(x)|^{2}\mathrm{d}x+2A\int_{0}^{1}|f(x)|\mathrm{d}x\right)^{2}\\ &\geqslant \left[\int_{0}^{1}|f(x)|^2\mathrm{d}x+\left(\int_{0}^{1}|f(x)|\mathrm{d}x\right)^{2} \right]\left(\int_{0}^{1}(|f(x)|+A)^{2}\mathrm{d}x\right) \end{align*}</script><p>经过简单的化简运算，就是</p><script type="math/tex; mode=display">\left(\int_{0}^{1}|f(x)|\mathrm{d}x\right)^{4}\geqslant 0</script><p>显然成立.</p>]]></content>
    
    
    <categories>
      
      <category>Math</category>
      
    </categories>
    
    
    <tags>
      
      <tag>积分不等式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tikz绘图笔记01</title>
    <link href="/2021/01/01/Tikz%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B001/"/>
    <url>/2021/01/01/Tikz%E7%BB%98%E5%9B%BE%E7%AC%94%E8%AE%B001/</url>
    
    <content type="html"><![CDATA[<p>直线和矩形</p><p>使用PGF绘图的基本语法是：<br><code>\draw[option]...;</code><br>其中 <strong>\draw</strong>  称为绘图命令；后面的…部分称为操作；<br>而[ ]中的能容称为选项，也就是说[ ]内可以不写内容。</p><p>如果我们要绘制一条直线的话，我们只需要在\draw 命令后面<br>输入点的坐标并使用—连结起来即可。比如：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (1,3)--(2,2)--(4,5);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC04MGVjNDZhMDIxYzlmYWZlLmpwZw?x-oss-process=image/format,png" alt=""></p><hr><p>可以通过[option]将锋利的角变成圆角，在option 处填写<strong>rounded corners</strong> 即可：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs LaTeX"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span>[rounded corners] (1,3)--(2,2)--(4,5);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1lZGJkYWNlMThjN2ZhMTNkLmpwZw?x-oss-process=image/format,png" alt=""></p><hr><p>将它首尾相连，使用<strong>cycle</strong><br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (1,3)--(2,2)--(4,5)--cycle;<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC0xZmYyOTE0NTVjOTcyMWM1LmpwZw?x-oss-process=image/format,png" alt=""></p><hr><p>绘制矩形的方式：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (0,0) rectangle (4,2);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC05ZDVkZTk5Mjk5ZmFkYzZjLmpwZw?x-oss-process=image/format,png" alt=""></p><hr><p>矩阵也有圆角选项，设置方式与之前一样：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span>[rounded corners] (0,0) rectangle (4,2);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1kYmNlMjg4NDJmZTYyOTAyLmpwZw?x-oss-process=image/format,png" alt=""></p><hr><h4 id="圆、椭圆、弧"><a href="#圆、椭圆、弧" class="headerlink" title="圆、椭圆、弧"></a>圆、椭圆、弧</h4><p>给出圆心坐标和半径，然后将<strong>circle</strong> 操作写在两者之间即可，注意半径值需要用小括号括起来：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (1,1) circle (1);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1hMzhjZjE2ZGJhZWJiMjc1LmpwZw?x-oss-process=image/format,png" alt=""></p><hr><p>给出椭圆的重心和长轴长、短轴长，然后将<strong>ellipse</strong> 操作写在两者中间即可，<br>注意，长轴长和短轴长需要用括号括起来，两者之间用<strong>and</strong> 隔开：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (1,1) ellipse (2 and 1);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC01Y2MzZjg4MTc4Njk4MGE0LmpwZw?x-oss-process=image/format,png" alt=""></p><hr><p>绘制圆弧或者椭圆弧我们只需要使用<strong>arc</strong> 操作并给出相应角度即可：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (1 ,1) arc (0:270:1);<br><span class="hljs-keyword">\draw</span> (6 ,1) arc (0:270:2 and 1);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1lMjliNDQ4ZDdmZmM1ZjFlLmpwZw?x-oss-process=image/format,png" alt=""></p><p>参数 $0:270$ 代表的是 $0^{\circ}$到$270^{\circ}$ ，即分别绘制了一个圆心在 $(1,1)$ ，半径为 $1$ 的四分之三圆弧和一个中心在 $(6,1)$ ，长轴长为 $2$ 、短轴长为 $1$ 的四分之三椭圆弧。在终止角度之后，使用一个冒号隔开终止角度与半径（长轴长 and 短轴长）。</p><hr><h4 id="曲线"><a href="#曲线" class="headerlink" title="曲线"></a>曲线</h4><p>抛物线用<strong>parabola</strong> 操作，<strong>bend</strong> 操作可以指明顶点。<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (5,1) parabola bend (6,0) (7.414 ,2);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC02YTRiM2UzN2JkYTBlYWUzLmpwZw?x-oss-process=image/format,png" alt=""></p><hr><p>$(5,1)$代表抛物线的起点，$(6,0)$ 代表抛物线的顶点，$(7.414 ,2)$ 代表抛物线的终点。如果我们想要将这些点也进行标记那我们可以使用 <strong>\filldraw</strong> 命令:<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (5,1) parabola bend (6,0) (7.414 ,2);<br><span class="hljs-keyword">\filldraw</span> (5,1) circle (.1)<br>(6,0) circle (.1)<br>(7.414 ,2) circle (.1);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1kMWQwNjAxYzE3MTBiZDg0LmpwZw?x-oss-process=image/format,png" alt=""></p><hr><p>我们还可以画出贝塞尔（Bézier）曲线。此时需要将 — 操作改为 .. 操作。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (0,0) .. controls (1,1) .. (4,0);<br><span class="hljs-keyword">\fill</span> (1,1) circle (1pt);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1hYjk0YTc5ODMyNzRkNDA1LmpwZw?x-oss-process=image/format,png" alt=""></p><p>这样画出的是三次贝塞尔曲线，其中曲线在起点 $(0, 0)$ 和终点 $(4, 0)$ 的切线都过点$ (1,1)$，因此点 $(1,1)$ 称为控制点。代码中的 <strong>\fill</strong> 是填充命令，这里用于画一个实心小圆点，我们后面还会再看到这个命令。</p><p>在绘制三次贝塞尔曲线时，也可以提供两个控制点。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (0,0) .. controls (1,1) and (2,1) .. (4,0);<br><span class="hljs-keyword">\fill</span> (1,1) circle (1pt) (2,1) circle (1pt);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1lNjAxMmQxZTMxN2Y5Y2E1LmpwZw?x-oss-process=image/format,png" alt=""></p><p>此时，曲线在起点 $(0, 0)$ 的切线过第一个控制点 $(1,1)$，而在终点 $(4, 0)$ 的切线过第二个控制点 $(2, 1)$。</p><p>三次贝塞尔曲线的形状可以更加复杂，例如下面的例子：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (0,0) .. controls (1,1) and (2,1) .. (4,1);<br><span class="hljs-keyword">\fill</span> (1,1) circle (1pt) (2,1) circle (1pt);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC01ODRiOTY4Y2NjMjgyMmUwLmpwZw?x-oss-process=image/format,png" alt=""></p><p>在绘制连接两点的曲线时，我们也可以指明起始角度和终结角度。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> (0,0) to[out=60,in=-90] (4,0);<br><span class="hljs-keyword">\draw</span> (0,0) to (4,0);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1hNDAxZDkyNzk0NTBjNDdiLmpwZw?x-oss-process=image/format,png" alt=""></p><p>如果 to 没有任何选项，就和前面的 — 操作同样画出线段。实际上， to 操作是比较一般的操作，它还有多种选项，这里不再详述。</p><hr><h4 id="网格"><a href="#网格" class="headerlink" title="网格"></a>网格</h4><p>网格的画法如下，其缺省步长是1cm 。<strong>grid</strong> 操作需要起止点两个参数。<strong>help lines</strong> 参数指示用0.2pt 的灰线。<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> [step=20pt] (0,0) grid (3,2);<br><span class="hljs-keyword">\draw</span> [help lines ,step=20pt] (4,0) grid (7,2);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1jYmU4N2JlMGQwZDY1NzAyLmpwZw?x-oss-process=image/format,png" alt=""></p><p>绘制网格类似于绘制矩形，起点和终点类似于我们在绘制矩形时给出的一对矩形的对角顶点，我们将<strong>grid</strong> 操作放在这一对点之间即可。<strong>step</strong> 是步长，即每一个小单元格的边长（小单元格均为正方形），其单位是<strong>pt</strong>。如果我们想要单元格的长度大一点的话那我们就将步长设置的大一些，否则就设置的小一些。</p><hr><h4 id="箭头"><a href="#箭头" class="headerlink" title="箭头"></a>箭头</h4><p>一些绘制箭头的命令如下：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> [-&gt;] (0,0)--(9,0);<br><span class="hljs-keyword">\draw</span> [&lt;-] (0,1)--(9,1);<br><span class="hljs-keyword">\draw</span> [&lt;-&gt;] (0,2)--(9,2);<br><span class="hljs-keyword">\draw</span> [&gt;-&gt;&gt;] (0,3)--(9,3);<br><span class="hljs-keyword">\draw</span> [|&lt;-&gt;|] (0,4)--(9,4);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC04NTI2OTI5ZTY3MjdkZmE3LmpwZw?x-oss-process=image/format,png" alt=""></p><hr><h4 id="线型和线宽"><a href="#线型和线宽" class="headerlink" title="线型和线宽"></a>线型和线宽</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span> [line width =2pt] (0,0)--(9,0); <span class="hljs-comment">%加粗实线</span><br><span class="hljs-keyword">\draw</span> [dotted] (0,1)--(9,1); <span class="hljs-comment">%点状虚线</span><br><span class="hljs-keyword">\draw</span> [densely dotted] (0,2)--(9,2); <span class="hljs-comment">%较密的点状虚线</span><br><span class="hljs-keyword">\draw</span> [loosely dotted] (0,3)--(9,3); <span class="hljs-comment">%较疏的点状虚线</span><br><span class="hljs-keyword">\draw</span> [dashed] (0,4)--(9,4); <span class="hljs-comment">%线状虚线</span><br><span class="hljs-keyword">\draw</span> [densely dashed] (0,5)--(9,5); <span class="hljs-comment">%较密的线状虚线</span><br><span class="hljs-keyword">\draw</span> [loosely dashed] (0,6)--(9,6); <span class="hljs-comment">%较疏的线状虚线</span><br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1mZTdkNDBkZTEwMmM2MGU4LmpwZw?x-oss-process=image/format,png" alt=""></p><hr><h4 id="颜色和填充"><a href="#颜色和填充" class="headerlink" title="颜色和填充"></a>颜色和填充</h4><p>PGF 可以结合<strong>xcolor</strong> 宏包的色彩功能。颜色和填充的用法见下例，其中 <strong>\filldraw</strong> 命令可以用不同颜色画线和填充。注意封闭路径才可以填充！<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span>[red] (0,0) --(9,0);<br><span class="hljs-keyword">\draw</span>[green] (0,1) --(9,1);<br><span class="hljs-keyword">\draw</span>[blue] (0,2) --(9,2);<br><span class="hljs-keyword">\filldraw</span>[draw=blue!80,fill=blue!20] (14 ,1) circle (1);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC0yNWY2MDM3NDBlNzczNDQ0LmpwZw?x-oss-process=image/format,png" alt=""></p><p>上例中如果我们想设置直线的颜色那么我们可以直接在<code>\draw</code> 命令后面的选项中填写颜色即可。<code>\filldraw</code>命令的选项中，<code>draw</code>是为封闭图形的边界设置颜色，而<code>fill</code>是对封闭图形的内部填充颜色。</p><hr><p>与 <strong>\fill</strong> 命令类似的还有 <strong>\shade</strong> 这个渐变命令。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\shade</span>[inner color=yellow,outer color=orange] (1,1) circle (1);<br><span class="hljs-keyword">\shade</span>[left color=gray,right color=black] (3,0) rectangle (6,2);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC05MmYzY2NmODAyZTIxZThhLmpwZw?x-oss-process=image/format,png" alt=""></p><hr><h4 id="节点命令"><a href="#节点命令" class="headerlink" title="节点命令"></a>节点命令</h4><p>如果想在图形上加上标签，就要用到节点命令 <strong>\node</strong> 了。例如下面的例子绘制了直角坐标系：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,0) -- (2,0);<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,0) -- (0,2);<br><span class="hljs-keyword">\node</span>[below=4pt,left] at (0,0) &#123;<span class="hljs-built_in">$</span>O<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\node</span>[right] at (2,0) &#123;<span class="hljs-built_in">$</span>x<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\node</span>[above] at (0,2) &#123;<span class="hljs-built_in">$</span>y<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1jZDMxZTczZjMyNGI5ZWE0LmpwZw?x-oss-process=image/format,png" alt=""></p><p>节点命令的一般形式如下：<br><code>\node[&lt;options &gt;] (&lt;name &gt;) at (&lt;coordinate &gt;) &#123;&lt;text &gt;&#125;</code></p><p>其中 <code>&lt;text&gt;</code>是节点的文本，<code>&lt;coordinate&gt;</code> 是节点的坐标， <code>&lt;name&gt;</code> 是节点的名称，而 <code>&lt;options&gt;</code> 是一些选项。在前面的例子里， <code>left</code>， <code>right</code>， <code>above</code> 和 <code>below</code>分别表示节点文本相对于节点坐标的四种位置。倘若不指明位置，节点文本的中心将和节点的坐标重合。</p><p>至于节点名称的用法，可以先看下面这个例子：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\node</span>[fill=lightgray] (a) at (0,0) &#123;X&#125;;<br><span class="hljs-keyword">\node</span>[fill=lightgray] (b) at (1,1) &#123;Y&#125;;<br><span class="hljs-keyword">\node</span>[fill=lightgray] (c) at (2,0) &#123;Z&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (a) -- (b);<br><span class="hljs-keyword">\draw</span>[-&gt;] (b) -- (c);<br><span class="hljs-keyword">\draw</span>[-&gt;] (c) -- (a);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC0yZDRjNmE2NWE3ZjJkNTUwLmpwZw?x-oss-process=image/format,png" alt=""></p><p>可以看到，知道了节点名称，就可以把它看成坐标那样，作各种线段和曲线的连接。这就是示意图或者流程图的一般绘制方法。节点之间也可以用相对位置。这时候，我们首先需要载入 <strong>positioning</strong> 库：<br><code>\usetikzlibrary&#123;positioning&#125;</code></p><p>然后就可以用类似下面例子的方法使用相对位置了：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\node</span>[fill=gray] (a) &#123;X&#125;;<br><span class="hljs-keyword">\node</span>[fill=gray,right=1 of a] (b) &#123;Y&#125;;<br><span class="hljs-keyword">\node</span>[fill=gray,right=1 of b] (c) &#123;Z&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (a) -- (b);<br><span class="hljs-keyword">\draw</span>[-&gt;] (b) -- (c);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC01NGI5NmQwOTg5Yjk2ZjJjLmpwZw?x-oss-process=image/format,png" alt=""></p><p>TikZ 中的节点形状预先定义好的有三种：矩形，圆形和点形，但可以自己定义新的形状。节点形状用 <strong>shape</strong> 选项来确定（不指定则默认为矩形），例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\node</span>[shape=rectangle,fill=gray] (a) at (0,0) &#123;X&#125;;<br><span class="hljs-keyword">\node</span>[shape=circle,fill=gray] (b) at (3,0) &#123;Y&#125;;<br><span class="hljs-keyword">\node</span>[shape=coordinate,fill=gray] (c) at (6,0) &#123;Z&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (a) -- (b);<br><span class="hljs-keyword">\draw</span>[-&gt;] (b) -- (c);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC0xOWI2N2RkY2QwYWYwYzJjLmpwZw?x-oss-process=image/format,png" alt=""></p><p>可以看到，由于点形节点的面积为零，所以填充颜色和标注文本都没有任何效果。</p><p>这种点形节点还可以用简化的记号来表示。例如上面例子的点形节点也可以这样表示：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\coordinate</span> (c) at (6,0);<br></code></pre></td></tr></table></figure></p><hr><h4 id="路径命令"><a href="#路径命令" class="headerlink" title="路径命令"></a>路径命令</h4><p>之前介绍的 \draw， \fill， \shade 和 \filldraw 命令，实际上，分别是\path[draw]， \path[fill] ， \path[shade] 和 \path[fill,draw] 命令的简写。而 \node 和 \coordinate 命令分别等同于 \path node 和 \path coordinate。</p><p>例如，下面这四种写法的效果是一样的，它们都画出一个半径为 1cm 的圆：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\draw</span> (0,0) circle (1cm);<br><span class="hljs-keyword">\path</span> [draw] (0,0) circle (1cm);<br><span class="hljs-keyword">\path</span> (0,0) [draw] circle (1cm);<br><span class="hljs-keyword">\path</span> (0,0) circle (1cm) [draw];<br></code></pre></td></tr></table></figure><br>而下面这两种写法也是一样的，它们都定义了一个节点：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\node</span> [fill=gray] (a) at (1,1) &#123;X&#125;;<br><span class="hljs-keyword">\path</span> (1,1) node[fill=gray] (a) &#123;X&#125;;<br></code></pre></td></tr></table></figure><br>TikZ 的路径命令，将之前介绍的多种命令统一起来了。我们来整理一下。首先，路径命令的一般形式如下：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\path</span> &lt;specification&gt;;<br></code></pre></td></tr></table></figure><br>即路径命令后面需要写上路径描述 <code>&lt;specification&gt;</code>，然后以分号结尾。而路径描述可以有多种，这些我们都介绍过了：</p><ul><li>(coordinate) (coordinate): 从一个点移动到另一个点</li><li>(coordinate) — (coordinate): 从一个点画线段到另一个点</li><li>(coordinate) rectangle (coordinate): 以这两个点为对角画矩形</li><li>(coordinate) circle[options]: 以这个点为圆心画圆</li><li>(coordinate) arc[options]: 以这个点为起点画圆弧</li><li>(coordinate) .. controls (control) and (control) .. (coordinate):从一个点画贝塞尔曲线到另一个点</li><li>(coordinate) to[options] (coordinate): 从一个点按照选项指定画某种曲线到另一个点</li><li>(coordinate) node[options] (name) {text}: 将这个点记为文本节点</li><li>(coordinate) coordinate (name): 将这个点记为点形节点</li></ul><hr><h4 id="描点绘制"><a href="#描点绘制" class="headerlink" title="描点绘制"></a>描点绘制</h4><p>在 <strong>\draw</strong> 命令中，我们还可以用 <strong>plot</strong> 操作来画一般的平面曲线。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,0) -- (4,0) node[right] &#123;<span class="hljs-built_in">$</span>x<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,0) -- (0,3) node[above] &#123;<span class="hljs-built_in">$</span>y<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span> plot coordinates &#123;(0,0) (1,2) (2,1) (4,3)&#125;;<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC0xNjVjYTE3Mjg0ODEzYWNkLmpwZw?x-oss-process=image/format,png" alt=""></p><p>上面的例子中，我们用折线连接各个点得到一条折线。我们也可以用光滑曲线连接这些点。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,0) -- (4,0) node[right] &#123;<span class="hljs-built_in">$</span>x<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,0) -- (0,3) node[above] &#123;<span class="hljs-built_in">$</span>y<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[color=red] plot[smooth] coordinates &#123;(0,0) (1,2) (2,1) (4,3)&#125;;<br><span class="hljs-keyword">\draw</span> plot[smooth,tension=.9] coordinates &#123;(0,0) (1,2) (2,1) (4,3)&#125;;<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC0wZWFhMTM2NDhjZGRhYmU2LmpwZw?x-oss-process=image/format,png" alt=""></p><p>其中 smooth 选项表示我们需要绘制光滑曲线，而 tension 选项描述该光滑曲线的绷紧度，取值范围为从 0 到 1，默认值为 0:55。</p><p>类似地，如果将 smooth 选项改为 smooth cycle 选项，将绘制一个闭合曲线。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;[smooth cycle]<br><span class="hljs-keyword">\draw</span> plot[tension=0] coordinates &#123;(0,1) (1,0) (2,1) (1,2)&#125;;<br><span class="hljs-keyword">\draw</span>[xshift=3cm] plot[tension=0.3] coordinates&#123;(0,1) (1,0) (2,1) (1,2)&#125;;<br><span class="hljs-keyword">\draw</span>[xshift=6cm] plot[tension=0.7] coordinates&#123;(0,1) (1,0) (2,1) (1,2)&#125;;<br><span class="hljs-keyword">\draw</span>[xshift=9cm] plot[tension=1] coordinates&#123;(0,1) (1,0) (2,1) (1,2)&#125;;<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC01ODlmYTM5ZTgwZWMyMGM3LmpwZw?x-oss-process=image/format,png" alt=""></p><p>在这个例子可以看到，对于正方形的四个顶点， tension=0 将画出正方形，而 tension=1 将画出圆形。</p><p>利用 \draw 命令的 plot 操作，我们也可以画一般的函数曲线。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;[domain=-3:3]<br><span class="hljs-keyword">\draw</span>[-&gt;] (-3.2,0) -- (3.2,0) node[below] &#123;<span class="hljs-built_in">$</span>x<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,-3.2) -- (0,3.2) node[above] &#123;<span class="hljs-built_in">$</span>f(x)<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[very thin,color=gray] (-3,-3) grid (3,3);<br><span class="hljs-keyword">\draw</span>[color=orange] plot (<span class="hljs-keyword">\x</span>,<span class="hljs-keyword">\x</span>);<br><span class="hljs-keyword">\draw</span>[color=blue] plot (<span class="hljs-keyword">\x</span>,&#123;sin(<span class="hljs-keyword">\x</span> r)&#125;);<br><span class="hljs-keyword">\draw</span>[color=red] plot (<span class="hljs-keyword">\x</span>,&#123;<span class="hljs-keyword">\x</span>-(1/6)*(<span class="hljs-keyword">\x</span>)<span class="hljs-built_in">^</span>3&#125;);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC02MmVmZGI1NGIyM2ZiYTE1LmpwZw?x-oss-process=image/format,png" alt=""></p><p>在函数的表达式中，乘号用 * 表示，而且不能省略。如果表示式不是简单的\x，我们一般需要将其中的变量 \x 用圆括号括起来，并且将整个表达式用花括号括起来；否则 PGF/TikZ 在解析表达式时多半会出错。注意代码中的 sin 函数<br>需要指明长度类型 r （表示弧度，默认为角度）。</p><p>实际上，我们用 plot 是可以画出参数曲线的，其中的 \x 就是参数。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;[domain=0:2*pi]<br><span class="hljs-keyword">\draw</span>[very thin,color=gray] (-2,-1) grid (7,1);<br><span class="hljs-keyword">\draw</span>[color=blue] plot (&#123;2*sin(<span class="hljs-keyword">\x</span> r)&#125;,&#123;cos(<span class="hljs-keyword">\x</span> r)&#125;);<br><span class="hljs-keyword">\draw</span>[color=red,xshift=5cm,samples=40] plot (&#123;2*sin(<span class="hljs-keyword">\x</span> r)&#125;,&#123;cos(<span class="hljs-keyword">\x</span> r)&#125;);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1lZGJkYmRhMjk3YzQ2MmJkLmpwZw?x-oss-process=image/format,png" alt=""></p><p>比较图形中的两个椭圆，可以看到第二个比第一个光滑。此中区别是由于取样点数 samples 的多少造成的。 samples 选项的默认取值为 25。</p><p>PGF 的数学引擎支持下面这些数学函数：<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC01YzlhYzMzOWM5NTQ2ZWNjLmpwZw?x-oss-process=image/format,png" alt=""></p><hr><h4 id="三维图形"><a href="#三维图形" class="headerlink" title="三维图形"></a>三维图形</h4><p>在 PGF/TikZ 中，也可以绘制空间参数曲线，此时我们用三个坐标来表示空间中的点。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;]<br><span class="hljs-keyword">\draw</span>[-&gt;] (-2,0,0) -- (2,0,0) node[right] &#123;<span class="hljs-built_in">$</span>x<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,-1,0) -- (0,3,0) node[above] &#123;<span class="hljs-built_in">$</span>y<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,0,-2) -- (0,0,2) node[below] &#123;<span class="hljs-built_in">$</span>z<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[color=red] plot[domain=0:2*pi] (&#123;sin(<span class="hljs-keyword">\x</span> r)&#125;,2,&#123;cos(<span class="hljs-keyword">\x</span> r)&#125;);<br><span class="hljs-keyword">\draw</span>[color=red] (0,0,0) -- (1,2,0) (0,0,0) -- (-1,2,0);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC02NzFjMWEzZjlhZTE2ODUxLmpwZw?x-oss-process=image/format,png" alt=""></p><p>在这个例子中，我们画出了空间中的一个圆以及两个线段，以此轮廓图表示一个圆锥面。但是这个例子还有两个不足：一是我们通常希望将 x 轴指向左下角， y 轴指向右边，而 z 轴指向上边；二是图形中圆和左斜线的连接点看来不太美观。这两个问题可以通过修改坐标轴的指向来解决。例如：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;[x=&#123;(-.1cm,-.15cm)&#125;,y=&#123;(1cm,0cm)&#125;,z=&#123;(0cm,1cm)&#125;]<br><span class="hljs-keyword">\draw</span>[-&gt;] (-5,0,0) -- (5,0,0) node[below] &#123;<span class="hljs-built_in">$</span>x<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,-2,0) -- (0,2,0) node[right] &#123;<span class="hljs-built_in">$</span>y<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[-&gt;] (0,0,-1) -- (0,0,3) node[above] &#123;<span class="hljs-built_in">$</span>z<span class="hljs-built_in">$</span>&#125;;<br><span class="hljs-keyword">\draw</span>[color=red] plot[domain=0:2*pi] (&#123;sin(<span class="hljs-keyword">\x</span> r)&#125;,&#123;cos(<span class="hljs-keyword">\x</span> r)&#125;,2);<br><span class="hljs-keyword">\draw</span>[color=red] (0,0,0) -- (0,1,2) (0,0,0) -- (0,-1,2);<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC03MjJmZTM4N2UxYjM3NjAxLmpwZw?x-oss-process=image/format,png" alt=""></p><p>其中的 $x$， $y$ 和$ z$ 指明了三个坐标轴各自的单位向量的位置。 PGF/TikZ 绘制时将按照指定的位置计算空间图形的投影。默认的取值为 x={(1cm,0cm)}，y={(0cm,1cm)}, z={(-.385cm,-.385cm)}。注意我们需要将坐标用花括号括起来。</p><hr><p>PGF/TikZ 无法绘制复杂的空间曲面，但我们可以用 pgfplots 宏包。在载入这个宏包后，我们可以先试试这个例子：<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\begin</span>&#123;axis&#125;[view=&#123;120&#125;&#123;30&#125;,xlabel=<span class="hljs-built_in">$</span>x<span class="hljs-built_in">$</span>,ylabel=<span class="hljs-built_in">$</span>y<span class="hljs-built_in">$</span>]<br><span class="hljs-keyword">\addplot</span>3[domain=-2:2,y domain=-2:2,mesh]&#123;x<span class="hljs-built_in">^</span>2-y<span class="hljs-built_in">^</span>2&#125;;<br><span class="hljs-keyword">\end</span>&#123;axis&#125;<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC1mMTI3MzI4NmFiZDI2NmE3LmpwZw?x-oss-process=image/format,png" alt=""></p><p>其中的 view 选项分别设定了前面所述的方位角和仰角，其默认值为view={25}{30}。由于在 pgfplots 中， z 轴总是垂直向上的，所以不管怎么调整视角都不可能让 y 轴指向右边而 x 轴指向左下角。</p><p>例子中的 mesh 选项指明我们用网格来表示曲面。如果将 mesh 改为 surf，将会填充曲面的网格。<br><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;tikzpicture&#125;<br><span class="hljs-keyword">\begin</span>&#123;axis&#125;[view=&#123;120&#125;&#123;30&#125;,axis lines=center,axis on top,<br>xmin=-2,xmax=2,ymin=-2,ymax=2,zmin=-5,zmax=5]<br><span class="hljs-keyword">\addplot</span>3[domain=-2:2,y domain=-2:2,surf]&#123;x<span class="hljs-built_in">^</span>2-y<span class="hljs-built_in">^</span>2&#125;;<br><span class="hljs-keyword">\end</span>&#123;axis&#125;<br><span class="hljs-keyword">\end</span>&#123;tikzpicture&#125;<br></code></pre></td></tr></table></figure><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly91cGxvYWQtaW1hZ2VzLmppYW5zaHUuaW8vdXBsb2FkX2ltYWdlcy8yNDQxMzA0NC0zMGUyMzVhZTY5NDJiMmQ4LmpwZw?x-oss-process=image/format,png" alt=""></p>]]></content>
    
    
    <categories>
      
      <category>LaTeX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tikz</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一道Ramanujan原创题</title>
    <link href="/2021/01/01/%E4%B8%80%E9%81%93Ramanujan%E5%8E%9F%E5%88%9B%E9%A2%98/"/>
    <url>/2021/01/01/%E4%B8%80%E9%81%93Ramanujan%E5%8E%9F%E5%88%9B%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p><strong>问题:</strong>解方程组</p><script type="math/tex; mode=display">\begin{cases}  x_{1}+x_{2}=8\\  x_{1}y_{1}+x_{2}y_{2}=-11 \\  x_{1}y_{1}^2+x_{2}y_{2}^2=17\\ x_{1}y_{1}^3+x_{2}y_{2}^3=-29 \end{cases}</script><p><strong>解:</strong></p><p>引入参数 $t$</p><p>设  $f(t)=\frac{x_1}{1-ty_1}+\frac{x_2}{1-ty_2}$</p><script type="math/tex; mode=display">f(t)=\sum_{n=0}^{\infty}(x_{1}y_{1}^{n}+x_{2}y_{2}^{n})t^n=8-11t+17t^2-29t^3+\cdots</script><p>注意到 $f(t)$ 也可表示为如下形式:</p><script type="math/tex; mode=display">\frac{A_{0}+A_{1}t}{1+B_{1}t+B_{2}t^2}</script><p>由</p><script type="math/tex; mode=display">\frac{A_0+A_1t}{1+B_1t+B_2t^2}=8-11t+17t^2-29t^3+\cdots</script><p>可得:</p><script type="math/tex; mode=display">A_{0}=8, A_{1}=8B_{1}-11</script><script type="math/tex; mode=display">-11B_{1}+8B_{2}=-17,17B_{1}-11B_{2}=29</script><p>解得: $\begin{cases}  A_0=8\  A_1=13 \  B_1=3\ B_2=2 \end{cases}$</p><p>于是</p><script type="math/tex; mode=display">f(t)=\frac{8+13t}{1+3t+2t^2}=\frac{5}{1+t}+\frac{3}{1+2t}</script><p>故原方程的解为:</p><script type="math/tex; mode=display">(x_{1},x_{2},y_{1},y_{2})=(5,3,-1,-2)</script><p>或</p><script type="math/tex; mode=display">(x_{1},x_{2},y_{1},y_{2})=(3,5,-2,-1)</script>]]></content>
    
    
    <categories>
      
      <category>Math</category>
      
    </categories>
    
    
    <tags>
      
      <tag>代数</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LaTeX插入图片</title>
    <link href="/2021/01/01/%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
    <url>/2021/01/01/%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
    
    <content type="html"><![CDATA[<h1 id="插入单个图片"><a href="#插入单个图片" class="headerlink" title="插入单个图片"></a>插入单个图片</h1><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\documentclass</span>&#123;article&#125;<br><span class="hljs-keyword">\usepackage</span>&#123;graphicx&#125;<br><span class="hljs-keyword">\begin</span>&#123;document&#125;<br><span class="hljs-keyword">\begin</span>&#123;figure&#125;[htbp]<br>    <span class="hljs-keyword">\centering</span><br>    <span class="hljs-keyword">\includegraphics</span>&#123;1.eps&#125;<br>    <span class="hljs-keyword">\caption</span>&#123;Elliptic Paraboloid&#125;<br>    <span class="hljs-keyword">\end</span>&#123;figure&#125; <br><span class="hljs-keyword">\end</span>&#123;document&#125; <br></code></pre></td></tr></table></figure><p><strong>代码说明：</strong></p><ol><li><p><code>\usepackage&#123;graphicx&#125;</code>为插入图片所需引入的宏包；</p></li><li><p><code>[htbp]</code>为调整图片排版位置选项，说明如下：</p><p><code>[h]</code>当前位置。将图形放置在正文文本中给出该图形环境的地方。如果本页所剩的页面不够，这一参数将不起作用。<br><code>[t]</code>顶部。将图形放置在页面的顶部。<br><code>[b]</code>底部。将图形放置在页面的底部。<br><code>[p]</code>浮动页。将图形放置在一只允许有浮动对象的页面上。</p></li><li><p>上一条中，图片位置为 <code>LaTeX</code> 自动排版，如若我们一定要指定图片在当前位置，仅使用 <code>[h]</code>命令是达不到效果的，此时方法如下：<br>a) 引入<code>float</code>宏包;<br>b) 将<code>\begin&#123;figure&#125;[htbp]</code>改为<code>\begin&#123;figure&#125;[H]</code>，注意是大写的<code>H</code>。</p></li><li><p><code>\centering</code> 为图片居中命令</p></li><li><p><code>\includegraphics&#123;1.eps&#125;</code> 用于插入图片，可用 <code>[ ]</code> 添加图片尺寸，例如<code>\includegraphics[width=9.5cm,height=8cm]&#123;1.eps&#125;</code>；花括号中为图片相对路径，通常应将图片放在与<code>LaTeX</code>文档相同的路径下，图片格式采用<code>.eps</code>矢量格式会更清晰</p></li><li><p><code>\caption</code>命令用于插入图注，其应用在<code>\includegraphics</code>的下方即将图注插在图片下方，反之亦然</p></li></ol><hr><h1 id="并排插入多张图片并公用一个caption"><a href="#并排插入多张图片并公用一个caption" class="headerlink" title="并排插入多张图片并公用一个caption"></a>并排插入多张图片并公用一个<code>caption</code></h1><p>有时候我们希望同时插入一组图片，共用一个大标题且为每张子图设小标题，效果如下：</p><p><img src="https://img-blog.csdn.net/20180601094259657?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2E2ODIyMzQy/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p>同时引入 <code>\usepackage&#123;graphicx&#125;</code> 和 <code>\usepackage&#123;subfigure&#125;</code> 宏包，如下代码实现。</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;figure&#125;[htbp]<br><span class="hljs-keyword">\centering</span><br><br><span class="hljs-keyword">\subfigure</span>[pic1.]&#123;<br><span class="hljs-keyword">\begin</span>&#123;minipage&#125;[t]&#123;0.25<span class="hljs-keyword">\linewidth</span>&#125;<br><span class="hljs-keyword">\centering</span><br><span class="hljs-keyword">\includegraphics</span>[width=1in]&#123;111.eps&#125;<br><span class="hljs-comment">%\caption&#123;fig1&#125;</span><br><span class="hljs-keyword">\end</span>&#123;minipage&#125;<span class="hljs-comment">%</span><br>&#125;<span class="hljs-comment">%</span><br><span class="hljs-keyword">\subfigure</span>[pic2.]&#123;<br><span class="hljs-keyword">\begin</span>&#123;minipage&#125;[t]&#123;0.25<span class="hljs-keyword">\linewidth</span>&#125;<br><span class="hljs-keyword">\centering</span><br><span class="hljs-keyword">\includegraphics</span>[width=1in]&#123;111.eps&#125;<br><span class="hljs-comment">%\caption&#123;fig2&#125;</span><br><span class="hljs-keyword">\end</span>&#123;minipage&#125;<span class="hljs-comment">%</span><br>&#125;<span class="hljs-comment">%</span><br>                 <span class="hljs-comment">%这个回车键很重要 \quad也可以</span><br><span class="hljs-keyword">\subfigure</span>[pic3.]&#123;<br><span class="hljs-keyword">\begin</span>&#123;minipage&#125;[t]&#123;0.25<span class="hljs-keyword">\linewidth</span>&#125;<br><span class="hljs-keyword">\centering</span><br><span class="hljs-keyword">\includegraphics</span>[width=1in]&#123;111.eps&#125;<br><span class="hljs-comment">%\caption&#123;fig2&#125;</span><br><span class="hljs-keyword">\end</span>&#123;minipage&#125;<br>&#125;<span class="hljs-comment">%</span><br><span class="hljs-keyword">\subfigure</span>[pic4.]&#123;<br><span class="hljs-keyword">\begin</span>&#123;minipage&#125;[t]&#123;0.25<span class="hljs-keyword">\linewidth</span>&#125;<br><span class="hljs-keyword">\centering</span><br><span class="hljs-keyword">\includegraphics</span>[width=1in]&#123;111.eps&#125;<br><span class="hljs-comment">%\caption&#123;fig2&#125;</span><br><span class="hljs-keyword">\end</span>&#123;minipage&#125;<br>&#125;<span class="hljs-comment">%</span><br><br><span class="hljs-keyword">\centering</span><br><span class="hljs-keyword">\caption</span>&#123; pics&#125;<br><span class="hljs-keyword">\end</span>&#123;figure&#125;<br></code></pre></td></tr></table></figure><hr><h1 id="图标题格式"><a href="#图标题格式" class="headerlink" title="图标题格式"></a><strong>图标题格式</strong></h1><p>论文里可能要求图片标题为 <code>Fig. 1.</code>，而有的模版生成出来的是 <code>Figure. 1.</code>，此时只需要在 <code>\begin&#123;document&#125;</code> 后面放上 <code>caption</code> 的格式控制命令：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;document&#125;<span class="hljs-keyword">\sloppy</span><br><span class="hljs-keyword">\captionsetup</span>[figure]&#123;labelfont=&#123;bf&#125;,name=&#123;Fig.&#125;,labelsep=period&#125;<br></code></pre></td></tr></table></figure><p><code>bf</code> 表示加粗，<code>name</code> 是要显示的名字，<code>labelsep</code> 是名称和序号之间的分隔符，<code>period</code> 表示用句号分隔，<code>space</code> 表示用空格分隔，没有参数就默认使用冒号分隔。</p><p>对于表格也同理，修改自己需要的 <code>name</code> 即可：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\captionsetup</span>[table]&#123;labelfont=&#123;bf&#125;,name=&#123;Table&#125;,labelsep=period&#125;<br></code></pre></td></tr></table></figure><p>下列宏包的作用是为有超链接的地方设定样式：<br><code>\usepackage[colorlinks,linkcolor=red,anchorcolor=blue,citecolor=green]&#123;hyperref&#125;</code></p>]]></content>
    
    
    <categories>
      
      <category>LaTeX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LaTeX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sin x 和 cos x 的无穷乘积</title>
    <link href="/2020/12/31/sinx%E5%92%8Ccosx%E7%9A%84%E6%97%A0%E7%A9%B7%E4%B9%98%E7%A7%AF/"/>
    <url>/2020/12/31/sinx%E5%92%8Ccosx%E7%9A%84%E6%97%A0%E7%A9%B7%E4%B9%98%E7%A7%AF/</url>
    
    <content type="html"><![CDATA[<p>利用</p><script type="math/tex; mode=display">\Gamma(x)\Gamma(1-x)=\frac{\pi}{\sin \pi x}</script><p>​        得到</p><script type="math/tex; mode=display">\sin \pi x=\frac{\pi}{-x\Gamma(x)\Gamma(-x)}</script><p>​        由<strong>Weierstrass公式</strong>易得</p><script type="math/tex; mode=display">\frac1{\Gamma(x)}=xe^{\gamma x}\prod_{n=1}^\infty\left(1+\frac xn\right)e^{-\frac xn}</script><p>​        易知</p><script type="math/tex; mode=display">\sin \pi x=\pi x\prod_{n=1}^{\infty}\left(1-\frac{x^2}{n^2}\right)</script><p>​        于是</p><script type="math/tex; mode=display">\frac{\sin x}{x}=\prod\limits_{n=1}^\infty\left(1-\frac{x^2}{\pi^2 n^2}\right)</script><p>​        注意到</p><script type="math/tex; mode=display">\cos \pi x=\frac{\sin 2 \pi x}{2 \sin \pi x}=\frac{2 \pi x \cdot \prod\limits_{n=1}^{\infty}\left(1-\frac{4 x^{2}}{n^{2}}\right)}{2 \pi x \cdot \prod\limits_{n=1}^{\infty}\left(1-\frac{x^{2}}{n^{2}}\right)}=\frac{\prod\limits_{n=1}^{\infty}\left(1-\frac{4 x^{2}}{n^{2}}\right)}{\prod\limits_{n=1}^{\infty}\left(1-\frac{x^{2}}{n^{2}}\right)}\\\prod_{n=1}^{\infty}\left(1-\frac{4 x^{2}}{(2 n-1)^{2}}\right) \prod_{n=1}^{\infty}\left(1-\frac{4 x^{2}}{(2 n)^{2}}\right)=\prod_{n=1}^{\infty}\left(1-\frac{4 x^{2}}{(2 n-1)^{2}}\right) \prod_{n=1}^{\infty}\left(1-\frac{x^{2}}{n^{2}}\right)</script><p>​        于是</p><script type="math/tex; mode=display">\cos \pi x=\prod_{n=1}^{\infty}\left(1-\frac{4 x^{2}}{(2 n-1)^{2}}\right)\\\cos  x=\prod_{n=1}^{\infty}\left(1-\frac{4 x^{2}}{\pi^2(2 n-1)^{2}}\right)</script><p>​        <a href="https://ocw.mit.edu/courses/mathematics/18-104-seminar-in-analysis-applications-to-number-theory-fall-2006/projects/chan.pdf">参考资料1</a>  <a href="http://people.math.binghamton.edu/dikran/478/Ch6.pdf">参考资料2</a>  <a href="https://math.stackexchange.com/questions/157372/proving-frac-sin-xx-left1-fracx2-pi2-right-left1-fracx22">参考资料3</a></p><p>​        </p>]]></content>
    
    
    <categories>
      
      <category>Math</category>
      
    </categories>
    
    
    <tags>
      
      <tag>无穷乘积</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
